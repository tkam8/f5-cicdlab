---
#Allow time for instance to boot
#seems to be an issue with bigip_wait, using bigip_command instead
#- name: Wait for BIG-IP to be ready, don't start checking for 90 seconds
#  bigip_wait:
#    delay: 90
#    provider:
#      server: "{{ inventory_hostname }}"
#      server_port: 8443
#      ssh_keyfile: "{{ ansible_ssh_private_key_file }}"
#      transport: cli
#      user: admin
#    validate_certs: no
#  delegate_to: localhost

- name: sleep for 360 seconds and continue with play
  wait_for: timeout=360
  delegate_to: localhost

- name: run show version and check to see if output contains BIG-IP
  bigip_command:
    commands: show sys version
    wait_for: result[0] contains BIG-IP
    provider:
      server: "{{ inventory_hostname }}"
      ssh_keyfile: "{{ ansible_ssh_private_key_file }}"
      transport: cli
      timeout: 600
      user: admin
    validate_certs: no
    retries: 50
  register: result
  delegate_to: localhost

#- name: Provision ASM at "nominal" level
#  bigip_provision:
#    module: asm
#    level: nominal
#    provider:
#      server: "{{ inventory_hostname }}"
#      server_port: 8443
#      password: "{{ ADMIN_PASSWORD }}"
#      ssh_keyfile: "{{ ansible_ssh_private_key_file }}"
#      transport: cli
#      user: admin
#    validate_certs: no
#  delegate_to: localhost

- name: provision asm level to nominal
  bigip_command:
    commands: modify sys provision asm level nominal
    provider:
      server: "{{ inventory_hostname }}"
      ssh_keyfile: "{{ ansible_ssh_private_key_file }}"
      transport: cli
      timeout: 900
      user: admin
    validate_certs: no
    retries: 50
  register: result
  delegate_to: localhost


- name: sleep for 300 seconds and continue with play
  wait_for: timeout=300
  delegate_to: localhost

- name: run show version and check to see if output contains BIG-IP
  bigip_command:
    commands: show sys version
    wait_for: result[0] contains BIG-IP
    provider:
      server: "{{ inventory_hostname }}"
      ssh_keyfile: "{{ ansible_ssh_private_key_file }}"
      transport: cli
      timeout: 600
      user: admin
    validate_certs: no
    retries: 50
  register: result
  delegate_to: localhost

- name: Set BIG-IP admin password
  bigip_command:
    provider:
      server: "{{ inventory_hostname }}"
      ssh_keyfile: "{{ ansible_ssh_private_key_file }}"
      transport: cli
      user: admin
    commands: modify auth user admin password {{ ADMIN_PASSWORD }}
    validate_certs: no
  delegate_to: localhost

- name: enable iApps LX Package management in UI
  bigip_command:
    provider:
      server: "{{ inventory_hostname }}"
      ssh_keyfile: "{{ ansible_ssh_private_key_file }}"
      transport: cli
      user: admin
    commands: run /util bash -c "touch /var/config/rest/iapps/enable"
    validate_certs: no
  delegate_to: localhost
